webpackHotUpdate(0,{

/***/ "../src/hierarchy-tree-selector.component.jsx":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return HierarchyTreeSelector; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(\"../node_modules/react/index.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__opuscapita_react_treeview__ = __webpack_require__(\"../../react-tree-component/lib/es/index.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_styled_components__ = __webpack_require__(\"../node_modules/styled-components/dist/styled-components.browser.es.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_immutable__ = __webpack_require__(\"../node_modules/immutable/dist/immutable.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_immutable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_immutable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_react_immutable_proptypes__ = __webpack_require__(\"../node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_react_immutable_proptypes___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_react_immutable_proptypes__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__opuscapita_react_grid__ = __webpack_require__(\"../node_modules/@opuscapita/react-grid/lib/es/index.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_prop_types__ = __webpack_require__(\"../node_modules/prop-types/index.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_react_redux__ = __webpack_require__(\"../node_modules/react-redux/es/index.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__opuscapita_react_perfect_scrollbar__ = __webpack_require__(\"../node_modules/@opuscapita/react-perfect-scrollbar/lib/es/index.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__hierarchy_tree_selector_arrows_component__ = __webpack_require__(\"../src/hierarchy-tree-selector-arrows.component.jsx\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__hierarchy_tree_selector_control_bar_component__ = __webpack_require__(\"../src/hierarchy-tree-selector-control-bar.component.jsx\");\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _dec, _class, _class2, _temp;\n\nvar _templateObject = _taggedTemplateLiteralLoose(['\\n  height: 100%;\\n  padding: 0;\\n  border: 1px solid ', ';\\n'], ['\\n  height: 100%;\\n  padding: 0;\\n  border: 1px solid ', ';\\n']),\n    _templateObject2 = _taggedTemplateLiteralLoose(['\\n  display: flex;\\n  height: calc(100% - 50px);\\n  > div {\\n    width: 50%;\\n    flex: 1 1 100%;\\n  }\\n'], ['\\n  display: flex;\\n  height: calc(100% - 50px);\\n  > div {\\n    width: 50%;\\n    flex: 1 1 100%;\\n  }\\n']),\n    _templateObject3 = _taggedTemplateLiteralLoose(['\\n  display: flex;\\n  max-width: 5rem;\\n  flex-direction: column;\\n  justify-content: center;\\n'], ['\\n  display: flex;\\n  max-width: 5rem;\\n  flex-direction: column;\\n  justify-content: center;\\n']),\n    _templateObject4 = _taggedTemplateLiteralLoose(['\\n  height:100%;\\n  border: 1px solid ', ';\\n  padding: ', ';\\n  .rc-tree {\\n    .rc-tree-iconEle.rc-tree-icon__customize {\\n        display:none;\\n    }\\n  }\\n'], ['\\n  height:100%;\\n  border: 1px solid ', ';\\n  padding: ', ';\\n  .rc-tree {\\n    .rc-tree-iconEle.rc-tree-icon__customize {\\n        display:none;\\n    }\\n  }\\n']);\n\n(function () {\n  var enterModule = __webpack_require__(\"../node_modules/react-hot-loader/index.js\").enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; }\n\n\n\n\n\n\n\n\n\n\n\n// App imports\n\n\n\nvar TREE_ACTIONS = {\n  ADD_CHILDREN: 'ADD_CHILDREN',\n  REMOVE_CHILD: 'REMOVE_CHILD',\n  RENAME: 'RENAME',\n  DELETE: 'DELETE'\n};\n\nvar Grid = Object(__WEBPACK_IMPORTED_MODULE_2_styled_components__[\"c\" /* default */])(__WEBPACK_IMPORTED_MODULE_5__opuscapita_react_grid__[\"a\" /* Datagrid */])(_templateObject, function (props) {\n  return props.theme.colors.colorLightGray;\n});\n\nvar Container = __WEBPACK_IMPORTED_MODULE_2_styled_components__[\"c\" /* default */].div(_templateObject2);\n\nvar Controls = __WEBPACK_IMPORTED_MODULE_2_styled_components__[\"c\" /* default */].div(_templateObject3);\n\nvar TreeContainer = __WEBPACK_IMPORTED_MODULE_2_styled_components__[\"c\" /* default */].div(_templateObject4, function (props) {\n  return props.theme.colors.colorLightGray;\n}, function (props) {\n  return props.theme.gutterWidth;\n});\n\nvar mapDispatchToProps = {\n  setData: __WEBPACK_IMPORTED_MODULE_5__opuscapita_react_grid__[\"b\" /* DatagridActions */].setData\n};\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  var gridId = props.grid.id;\n  return {\n    selectedItems: state.datagrid.getIn([gridId, 'selectedItems'], Object(__WEBPACK_IMPORTED_MODULE_3_immutable__[\"List\"])()),\n    gridData: state.datagrid.getIn([gridId, 'allData'], Object(__WEBPACK_IMPORTED_MODULE_3_immutable__[\"List\"])())\n  };\n};\n\nvar HierarchyTreeSelector = (_dec = Object(__WEBPACK_IMPORTED_MODULE_7_react_redux__[\"connect\"])(mapStateToProps, mapDispatchToProps), _dec(_class = (_temp = _class2 = function (_React$PureComponent) {\n  _inherits(HierarchyTreeSelector, _React$PureComponent);\n\n  function HierarchyTreeSelector(props) {\n    _classCallCheck(this, HierarchyTreeSelector);\n\n    var _this = _possibleConstructorReturn(this, _React$PureComponent.call(this, props));\n\n    _this.onTreeItemSelect = function (selectedItems) {\n      _this.setState({ selectedTreeItemId: selectedItems[0] });\n    };\n\n    _this.onDeleteClick = function () {};\n\n    _this.onAddNewClick = function (data) {\n      var _this$props = _this.props,\n          onChange = _this$props.onChange,\n          treeData = _this$props.treeData;\n\n      var newItems = treeData.slice();\n\n      // If no tree node is selected, we'll place the new item to the root\n      // of the tree\n      if (!_this.state.selectedTreeItemId) {\n        newItems.push(data);\n      } else {\n        var action = {\n          type: TREE_ACTIONS.ADD_CHILDREN,\n          data: data\n        };\n        newItems = _this.getUpdatedTree(_this.state.selectedTreeItemId, treeData, action);\n      }\n      onChange(newItems);\n    };\n\n    _this.onMoveToGridClick = function () {\n      var _this$props2 = _this.props,\n          treeData = _this$props2.treeData,\n          onChange = _this$props2.onChange,\n          gridData = _this$props2.gridData,\n          gridColumns = _this$props2.gridColumns,\n          grid = _this$props2.grid;\n\n\n      var newGridItems = gridData.slice().push(Object(__WEBPACK_IMPORTED_MODULE_3_immutable__[\"Map\"])(_this.findTreeItem(_this.state.selectedTreeItemId)));\n\n      var action = {\n        type: TREE_ACTIONS.REMOVE_CHILD,\n        data: _this.state.selectedTreeItemId\n      };\n\n      var newItems = _this.getUpdatedTree(_this.state.selectedTreeItemId, treeData, action);\n\n      _this.props.setData(grid, gridColumns, newGridItems);\n      onChange(newItems);\n    };\n\n    _this.onMoveToTreeClick = function () {\n      var _this$props3 = _this.props,\n          grid = _this$props3.grid,\n          gridColumns = _this$props3.gridColumns,\n          onChange = _this$props3.onChange,\n          selectedItems = _this$props3.selectedItems,\n          gridData = _this$props3.gridData,\n          treeData = _this$props3.treeData;\n\n\n      var action = {\n        type: TREE_ACTIONS.ADD_CHILDREN,\n        data: gridData.filter(function (i) {\n          return selectedItems.includes(i.get('id'));\n        }).toJS()\n      };\n      var newItems = _this.getUpdatedTree(_this.state.selectedTreeItemId, treeData, action);\n      var newGridItems = gridData.filter(function (item) {\n        return !selectedItems.includes(item.get('id'));\n      });\n\n      _this.props.setData(grid, gridColumns, newGridItems);\n      onChange(newItems);\n    };\n\n    _this.onInputChange = function (value) {\n      var _this$props4 = _this.props,\n          treeData = _this$props4.treeData,\n          onChange = _this$props4.onChange;\n\n      var action = {\n        type: TREE_ACTIONS.RENAME,\n        data: value\n      };\n      var newItems = _this.getUpdatedTree(_this.state.selectedTreeItemId, treeData, action);\n      onChange(newItems);\n    };\n\n    _this.getUpdatedTree = function (id) {\n      var array = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.props.treeData;\n      var action = arguments[2];\n\n      var found = false;\n      var _this$props5 = _this.props,\n          idKey = _this$props5.idKey,\n          childKey = _this$props5.childKey,\n          valueKey = _this$props5.valueKey;\n\n      var newItems = array.slice();\n\n      for (var i = 0; i < newItems.length; i += 1) {\n        var item = newItems[i];\n\n        // When removing an item we must first find its parent and alter its children array\n        if (action.type === TREE_ACTIONS.REMOVE_CHILD && item[childKey] && !found) {\n          found = !!item[childKey].find(function (child) {\n            return child[idKey] === id;\n          });\n          if (found) {\n            item[childKey] = item[childKey].filter(function (child) {\n              return child[idKey] !== id;\n            });\n            break;\n          }\n        }\n\n        if (item[idKey] === id && !found) {\n          found = true;\n          switch (action.type) {\n            case TREE_ACTIONS.ADD_CHILDREN:\n              item[childKey] = (item[childKey] || []).concat(action.data);\n              break;\n            case TREE_ACTIONS.RENAME:\n              item[valueKey] = action.data;\n              break;\n            case TREE_ACTIONS.DELETE:\n              console.log('DELETING', id);\n              break;\n            default:\n              throw new TypeError('Action type is undefined');\n          }\n          break;\n        }\n\n        if (item[childKey] && !found) found = _this.getUpdatedTree(id, item[childKey], action);\n      }\n\n      if (!found) return false;\n      return newItems;\n    };\n\n    _this.getSelectedValue = function () {\n      var valueKey = _this.props.valueKey;\n\n      var item = _this.findTreeItem(_this.state.selectedTreeItemId);\n      return item ? item[valueKey] : null;\n    };\n\n    _this.isSelectedItemParent = function () {\n      var childKey = _this.props.childKey;\n\n      var item = _this.findTreeItem(_this.state.selectedTreeItemId);\n      return item ? !!item[childKey] : false;\n    };\n\n    _this.findTreeItem = function (id) {\n      var array = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.props.treeData;\n      var _this$props6 = _this.props,\n          childKey = _this$props6.childKey,\n          idKey = _this$props6.idKey;\n\n      var found = array.find(function (item) {\n        return item[idKey] === id;\n      });\n      if (!found) {\n        array.forEach(function (item) {\n          if (item[childKey] && !found) found = _this.findTreeItem(id, item[childKey]);\n        });\n      }\n      return found;\n    };\n\n    _this.state = {\n      selectedTreeItemId: null\n    };\n    return _this;\n  }\n\n  /**\n   * Selects a tree item\n   * @param selectedItems (array)\n   */\n\n\n  /**\n   * Adds a new node to the root of the tree, or under a selected tree node using\n   * ADD_CHILDREN action\n   * @param data\n   */\n\n\n  /**\n   * Removes the chosen item from a tree and updates the grid using REMOVE_CHILD\n   * action\n   */\n\n\n  /**\n   * Adds selected grid items to the chosen tree node using ADD_CHILDREN action\n   */\n\n\n  /**\n   * Renames the chosen tree node using a RENAME action\n   * @param value\n   */\n\n\n  /**\n   * Returns updated tree items.\n   * @param id - target item\n   * @param array - array where target item is being searched\n   * @param action - action to be performed {type, data}\n   * @returns {*}\n   */\n\n\n  /**\n   * Returns the value of the selected tree item\n   * @returns {null}\n   */\n\n\n  /**\n   * Is selected item a parent (has a [childKey])\n   * @returns {boolean}\n   */\n\n\n  /**\n   * Returns a tree item by ID\n   * @param id\n   * @param array\n   * @returns {{}}\n   */\n\n\n  HierarchyTreeSelector.prototype.render = function render() {\n    var _props = this.props,\n        valueKey = _props.valueKey,\n        idKey = _props.idKey,\n        treeData = _props.treeData,\n        grid = _props.grid,\n        gridColumns = _props.gridColumns,\n        className = _props.className,\n        selectedItems = _props.selectedItems;\n\n\n    var extendedGrid = Object.assign({}, grid, { defaultShowFilteringRow: true });\n    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      'div',\n      { className: className },\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_10__hierarchy_tree_selector_control_bar_component__[\"a\" /* default */], _extends({}, this.props, {\n        onAddNewClick: this.onAddNewClick,\n        onDeleteClick: this.onDeleteClick,\n        addDisabled: !this.isSelectedItemParent() && !!this.state.selectedTreeItemId,\n        inputDisabled: !this.isSelectedItemParent(),\n        deleteDisabled: !this.isSelectedItemParent(),\n        selectedValue: this.getSelectedValue(),\n        onInputChange: this.onInputChange\n      })),\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        Container,\n        null,\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          __WEBPACK_IMPORTED_MODULE_8__opuscapita_react_perfect_scrollbar__[\"a\" /* default */],\n          null,\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n            TreeContainer,\n            null,\n            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__opuscapita_react_treeview__[\"a\" /* default */], {\n              treeData: treeData,\n              dataLookUpKey: idKey,\n              dataLookUpValue: valueKey,\n              onSelect: this.onTreeItemSelect,\n              checkable: false,\n              selectable: true,\n              defaultExpandAll: true\n            })\n          )\n        ),\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          Controls,\n          null,\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_9__hierarchy_tree_selector_arrows_component__[\"a\" /* default */], {\n            icon: 'CaretLeft',\n            onClick: this.onMoveToTreeClick,\n            disabled: !this.isSelectedItemParent() || !selectedItems.size\n          }),\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_9__hierarchy_tree_selector_arrows_component__[\"a\" /* default */], {\n            icon: 'CaretRight',\n            onClick: this.onMoveToGridClick,\n            disabled: this.isSelectedItemParent()\n          })\n        ),\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Grid, {\n          grid: extendedGrid,\n          columns: gridColumns,\n          rowSelect: true,\n          multiSelect: true,\n          filtering: true\n        })\n      )\n    );\n  };\n\n  // @ts-ignore\n  HierarchyTreeSelector.prototype.__reactstandin__regenerateByEval = function __reactstandin__regenerateByEval(key, code) {\n    // @ts-ignore\n    this[key] = eval(code);\n  };\n\n  return HierarchyTreeSelector;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.PureComponent), _class2.propTypes = {\n  idKey: __WEBPACK_IMPORTED_MODULE_6_prop_types___default.a.string,\n  valueKey: __WEBPACK_IMPORTED_MODULE_6_prop_types___default.a.string,\n  childKey: __WEBPACK_IMPORTED_MODULE_6_prop_types___default.a.string,\n  treeData: __WEBPACK_IMPORTED_MODULE_6_prop_types___default.a.arrayOf(__WEBPACK_IMPORTED_MODULE_6_prop_types___default.a.shape({})),\n  onChange: __WEBPACK_IMPORTED_MODULE_6_prop_types___default.a.func.isRequired,\n  grid: __WEBPACK_IMPORTED_MODULE_5__opuscapita_react_grid__[\"e\" /* gridShape */].isRequired,\n  gridColumns: __WEBPACK_IMPORTED_MODULE_6_prop_types___default.a.arrayOf(__WEBPACK_IMPORTED_MODULE_5__opuscapita_react_grid__[\"d\" /* gridColumnShape */]).isRequired,\n  className: __WEBPACK_IMPORTED_MODULE_6_prop_types___default.a.string,\n  setData: __WEBPACK_IMPORTED_MODULE_6_prop_types___default.a.func.isRequired,\n  selectedItems: __WEBPACK_IMPORTED_MODULE_4_react_immutable_proptypes___default.a.list.isRequired,\n  gridData: __WEBPACK_IMPORTED_MODULE_4_react_immutable_proptypes___default.a.list.isRequired,\n  defaultNewNodeValue: __WEBPACK_IMPORTED_MODULE_6_prop_types___default.a.string,\n  translations: __WEBPACK_IMPORTED_MODULE_6_prop_types___default.a.shape({})\n}, _class2.defaultProps = {\n  idKey: 'id',\n  valueKey: 'name',\n  childKey: 'children',\n  treeData: [],\n  className: '',\n  defaultNewNodeValue: 'New node',\n  translations: {\n    add: 'Add level',\n    delete: 'Delete'\n  }\n}, _temp)) || _class);\n\n;\n\n(function () {\n  var reactHotLoader = __webpack_require__(\"../node_modules/react-hot-loader/index.js\").default;\n\n  var leaveModule = __webpack_require__(\"../node_modules/react-hot-loader/index.js\").leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(TREE_ACTIONS, 'TREE_ACTIONS', 'C:/dev/hierarchy-tree/src/hierarchy-tree-selector.component.jsx');\n  reactHotLoader.register(Grid, 'Grid', 'C:/dev/hierarchy-tree/src/hierarchy-tree-selector.component.jsx');\n  reactHotLoader.register(Container, 'Container', 'C:/dev/hierarchy-tree/src/hierarchy-tree-selector.component.jsx');\n  reactHotLoader.register(Controls, 'Controls', 'C:/dev/hierarchy-tree/src/hierarchy-tree-selector.component.jsx');\n  reactHotLoader.register(TreeContainer, 'TreeContainer', 'C:/dev/hierarchy-tree/src/hierarchy-tree-selector.component.jsx');\n  reactHotLoader.register(mapDispatchToProps, 'mapDispatchToProps', 'C:/dev/hierarchy-tree/src/hierarchy-tree-selector.component.jsx');\n  reactHotLoader.register(mapStateToProps, 'mapStateToProps', 'C:/dev/hierarchy-tree/src/hierarchy-tree-selector.component.jsx');\n  reactHotLoader.register(HierarchyTreeSelector, 'HierarchyTreeSelector', 'C:/dev/hierarchy-tree/src/hierarchy-tree-selector.component.jsx');\n  leaveModule(module);\n})();\n\n;\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(\"../node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../src/hierarchy-tree-selector.component.jsx\n");

/***/ })

})