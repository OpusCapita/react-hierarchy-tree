webpackHotUpdate(0,{

/***/ "../../react-tree-component/lib/es/tree.component.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return OCTreeView; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(\"../node_modules/react/index.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(\"../../react-tree-component/node_modules/prop-types/index.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rc_tree__ = __webpack_require__(\"../../react-tree-component/node_modules/rc-tree/es/index.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rc_tree_assets_index_css__ = __webpack_require__(\"../../react-tree-component/node_modules/rc-tree/assets/index.css\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rc_tree_assets_index_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rc_tree_assets_index_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__oc_tree_styles_scss__ = __webpack_require__(\"../../react-tree-component/lib/es/oc-tree-styles.scss\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__oc_tree_styles_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__oc_tree_styles_scss__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__tree_checkbox_component__ = __webpack_require__(\"../../react-tree-component/lib/es/tree-checkbox.component.js\");\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _class, _temp2;\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n\n\n\n\n// Override defaults rc-tree styles\n\n\n\nvar OCTreeView = (_temp2 = _class = function (_React$PureComponent) {\n  _inherits(OCTreeView, _React$PureComponent);\n\n  function OCTreeView() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, OCTreeView);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args))), _this), _this.onDragDrop = function (e) {\n      if (!_this.props.onDragDrop) throw new TypeError('onDragDrop callback is not defined');\n      var dropKey = e.node.props.eventKey;\n      var dragKey = e.dragNode.props.eventKey;\n\n      var loop = function loop(data, key, callback) {\n        data.forEach(function (item, index, arr) {\n          if (item.key === key) return callback(item, index, arr);\n          if (item.children) return loop(item.children, key, callback);\n          return null;\n        });\n      };\n\n      var newData = _this.props.treeData.slice();\n\n      var dragObj = void 0;\n      loop(newData, dragKey, function (item, index, arr) {\n        arr.splice(index, 1);\n        dragObj = item;\n      });\n\n      // .. item is dropped between 2 items\n      if (e.dropToGap) {\n        var ar = void 0;\n        var i = void 0;\n        loop(newData, dropKey, function (item, index, arr) {\n          ar = arr;\n          i = index;\n        });\n        ar.splice(i, 0, dragObj);\n      } else {\n        loop(newData, dropKey, function (item) {\n          item.children = item.children || []; // eslint-disable-line no-param-reassign\n          item.children.push(dragObj);\n        });\n      }\n\n      _this.props.onDragDrop(newData);\n    }, _this.hasChildren = function (dataObject) {\n      return dataObject[_this.props.dataLookUpChildren] && dataObject[_this.props.dataLookUpChildren].length >= 1;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /* hasChildren - function */\n\n  /* renderNodes - function */\n  OCTreeView.prototype.renderNodes = function renderNodes() {\n    var _props = this.props,\n        dataLookUpKey = _props.dataLookUpKey,\n        dataLookUpValue = _props.dataLookUpValue,\n        dataLookUpChildren = _props.dataLookUpChildren,\n        iconClass = _props.iconClass,\n        disabled = _props.disabled;\n\n    var checkChildren = this.hasChildren;\n\n    // Recursive function for collecting nodes:\n    var mountNodes = function mountNodes(nodeList) {\n      var list = [];\n      nodeList.forEach(function (node) {\n        if (!node[dataLookUpKey]) return false;\n        // Leaf node\n        if (!checkChildren(node)) {\n          list.push( // eslint-disable-line function-paren-newline\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_rc_tree__[\"a\" /* TreeNode */], {\n            title: node[dataLookUpValue],\n            key: node[dataLookUpKey],\n            className: iconClass + ' leaf-node',\n            icon: __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__tree_checkbox_component__[\"a\" /* default */], { disabled: disabled })\n          }));\n        } else {\n          // Parent node\n          list.push( // eslint-disable-line function-paren-newline\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_rc_tree__[\"a\" /* TreeNode */], {\n            title: node[dataLookUpValue],\n            key: node[dataLookUpKey],\n            className: iconClass + ' parent-node',\n            icon: __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__tree_checkbox_component__[\"a\" /* default */], { disabled: disabled })\n          }, mountNodes(node[dataLookUpChildren])));\n        }\n        return false;\n      });\n      return list;\n    };\n    return mountNodes(this.props.treeData);\n  };\n\n  OCTreeView.prototype.render = function render() {\n    var nodes = this.renderNodes();\n    var clsName = this.props.className ? this.props.className + ' oc-react-tree' : 'oc-react-tree';\n    var _props2 = this.props,\n        treeId = _props2.treeId,\n        className = _props2.className,\n        defaultExpandedKeys = _props2.defaultExpandedKeys,\n        defaultSelectedKeys = _props2.defaultSelectedKeys,\n        defaultCheckedKeys = _props2.defaultCheckedKeys,\n        checkedKeys = _props2.checkedKeys,\n        onExpand = _props2.onExpand,\n        onSelect = _props2.onSelect,\n        onCheck = _props2.onCheck,\n        showLine = _props2.showLine,\n        showIcon = _props2.showIcon,\n        checkable = _props2.checkable,\n        selectable = _props2.selectable,\n        defaultExpandAll = _props2.defaultExpandAll,\n        draggable = _props2.draggable,\n        disabled = _props2.disabled;\n\n    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div', { id: 'tree-view-container', className: clsName }, !!nodes.length && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_rc_tree__[\"b\" /* default */], {\n      id: treeId,\n      className: className,\n      defaultExpandedKeys: defaultExpandedKeys,\n      defaultSelectedKeys: defaultSelectedKeys,\n      defaultCheckedKeys: defaultCheckedKeys,\n      checkedKeys: checkedKeys,\n      onExpand: onExpand,\n      onSelect: onSelect,\n      onCheck: onCheck,\n      showLine: showLine,\n      showIcon: showIcon,\n      checkable: checkable,\n      selectable: selectable,\n      disabled: disabled,\n      draggable: draggable,\n      defaultExpandAll: defaultExpandAll,\n      onDrop: this.onDragDrop\n    }, nodes));\n  };\n\n  return OCTreeView;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.PureComponent), _class.propTypes = {\n  treeId: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string,\n  className: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string,\n  iconClass: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string,\n  defaultExpandedKeys: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.arrayOf(__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string),\n  defaultSelectedKeys: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.arrayOf(__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string),\n  defaultCheckedKeys: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.arrayOf(__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string),\n  onExpand: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,\n  onSelect: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,\n  onCheck: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,\n  onDragDrop: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,\n  showLine: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,\n  showIcon: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,\n  checkable: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,\n  selectable: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,\n  draggable: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,\n  disabled: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,\n  defaultExpandAll: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,\n  // Customisation -- define the data lookUpKeys and lookUpValues\n  treeData: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.arrayOf(__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object),\n  dataLookUpKey: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string,\n  dataLookUpValue: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string,\n  dataLookUpChildren: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string,\n  checkedKeys: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.arrayOf(__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string)\n}, _class.defaultProps = {\n  treeId: 'defaultTree',\n  iconClass: 'carets',\n  defaultExpandedKeys: [],\n  defaultSelectedKeys: [],\n  defaultCheckedKeys: [],\n  onExpand: undefined,\n  onSelect: undefined,\n  onCheck: undefined,\n  onDragDrop: undefined,\n  showLine: false,\n  disabled: false,\n  showIcon: true,\n  checkable: false,\n  draggable: false,\n  selectable: false,\n  defaultExpandAll: false,\n  // Customs\n  dataLookUpKey: 'key',\n  dataLookUpValue: 'parent',\n  dataLookUpChildren: 'children',\n  treeData: [],\n  checkedKeys: [],\n  className: ''\n}, _temp2);\n\n;\n\nvar _temp3 = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(_class, \"_class\", \"C:/dev/react-tree-component/lib/es/tree.component.js\");\n\n  __REACT_HOT_LOADER__.register(_temp2, \"_temp2\", \"C:/dev/react-tree-component/lib/es/tree.component.js\");\n\n  __REACT_HOT_LOADER__.register(_classCallCheck, \"_classCallCheck\", \"C:/dev/react-tree-component/lib/es/tree.component.js\");\n\n  __REACT_HOT_LOADER__.register(_possibleConstructorReturn, \"_possibleConstructorReturn\", \"C:/dev/react-tree-component/lib/es/tree.component.js\");\n\n  __REACT_HOT_LOADER__.register(_inherits, \"_inherits\", \"C:/dev/react-tree-component/lib/es/tree.component.js\");\n\n  __REACT_HOT_LOADER__.register(OCTreeView, \"OCTreeView\", \"C:/dev/react-tree-component/lib/es/tree.component.js\");\n}();\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../react-tree-component/lib/es/tree.component.js\n");

/***/ })

})